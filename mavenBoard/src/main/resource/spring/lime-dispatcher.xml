<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<mvc:annotation-driven>
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />


	<context:component-scan base-package="ino.*"/>
	
	<context:annotation-config />
	
	<!-- viewresolver -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="1" />
	</bean>
	<!-- ajax를 처리할 resolver의 load 순서를 0으로 하여 먼저 인식하도록 함  -->

<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0">
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="contentType" value="application/json;charset=UTF-8">
	</property></bean>


order 프로퍼티를 수정하여  인식 순서를 변경

<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1">
	</property></bean>
여러가지를 먼저 처리할 resolver가 있는 경우 스프링 기본제공 resolver는 최하위 순서가 되는 경우가 많다. 그냥 맨 뒤로 빼자
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp'
        <property name="order" value="2">
        <property name="prefix" value="/WEB-INF/views/**/">
        <property name="suffix" value=".jsp">
	</property></property></property></bean>  
</bean> -->

<!-- 멀티파트 리졸버 -->

<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- 최대업로드 가능한 바이트크기 -->
         <property name="maxUploadSize" value="52428800" />
         <!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
         <!-- property name="maxInMemorySize" value="52428800" / -->
         <!-- defaultEncoding -->
         <property name="defaultEncoding" value="utf-8" />
</bean>

	<!-- tiles -->
	<bean id="tilesconfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath*:spring/tiles/tiles.xml</value>
			</list>
		</property>
	</bean>

</beans>

